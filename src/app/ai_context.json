{
  "project_structure": [
    "components\\newconflista\\newconflista.component.html",
    "components\\newconflista\\newconflista.component.ts",
    "services\\subirdata.service.ts"
  ],
  "file_contents": {
    "components\\newconflista\\newconflista.component.html": {
      "content": "<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <form ngNativeValidate [formGroup]=\"nuevoconflistaForm\" (ngSubmit)=\"guardar(nuevoconflistaForm)\"\n                    class=\"form-horizontal\">\n                    <style>\n                        .ng-invalid.ng-touched:not(form) {\n                            border-color: #f62d51;\n                            border-left: 5px solid #f62d51;\n                        }\n                        .form-group.has-danger .form-control {\n                            border-color: #f62d51;\n                            border-left: 5px solid #f62d51;\n                        }\n                    </style>\n                    <div class=\"form-body\">\n                        <h3 class=\"box-title\">Nueva Conflista</h3>\n                        <hr class=\"m-t-0 m-b-40\">\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <div *ngIf=\"this.listapFlag\" class=\"form-group row has-danger\">\n                                    <label class=\"control-label text-right col-md-3\">Lista *</label>\n                                    <div class=\"col-md-9\">\n                                        <input type=\"number\" class=\"form-control\" formControlName=\"listap\" placeholder=\"\">\n                                        <small class=\"form-control-feedback\">Máximo 4 dígitos</small>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"!this.listapFlag\" class=\"form-group row\">\n                                    <label class=\"control-label text-right col-md-3\">Lista *</label>\n                                    <div class=\"col-md-9\">\n                                        <input type=\"number\" class=\"form-control\" formControlName=\"listap\" placeholder=\"\">\n                                        <small class=\"form-control-feedback\">Máximo 4 dígitos</small>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group row\">\n                                    <label class=\"control-label text-right col-md-3\">Activa</label>\n                                    <div class=\"col-md-9\">\n                                        <select class=\"form-control boolean-select\" formControlName=\"activa\">\n                                            <option [ngValue]=\"true\">Si</option>\n                                            <option [ngValue]=\"false\">No</option>\n                                        </select>\n                                        <small class=\"form-control-feedback\">Marcar si la lista está activa</small>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div *ngIf=\"this.precosto21Flag\" class=\"form-group row has-danger\">\n                                    <label class=\"control-label text-right col-md-3\">Costo 21 *</label>\n                                    <div class=\"col-md-9\">\n                                        <input type=\"number\" step=\"0.01\" class=\"form-control\" formControlName=\"precosto21\" placeholder=\"\">\n                                        <small class=\"form-control-feedback\">Valor numérico (máx. 10 dígitos, 2 decimales)</small>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"!this.precosto21Flag\" class=\"form-group row\">\n                                    <label class=\"control-label text-right col-md-3\">Costo 21 *</label>\n                                    <div class=\"col-md-9\">\n                                        <input type=\"number\" step=\"0.01\" class=\"form-control\" formControlName=\"precosto21\" placeholder=\"\">\n                                        <small class=\"form-control-feedback\">Valor numérico (máx. 10 dígitos, 2 decimales)</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <div *ngIf=\"this.precosto105Flag\" class=\"form-group row has-danger\">\n                                    <label class=\"control-label text-right col-md-3\">Costo 105 *</label>\n                                    <div class=\"col-md-9\">\n                                        <input type=\"number\" step=\"0.01\" class=\"form-control\" formControlName=\"precosto105\" placeholder=\"\">\n                                        <small class=\"form-control-feedback\">Valor numérico (máx. 10 dígitos, 2 decimales)</small>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"!this.precosto105Flag\" class=\"form-group row\">\n                                    <label class=\"control-label text-right col-md-3\">Costo 105 *</label>\n                                    <div class=\"col-md-9\">\n                                        <input type=\"number\" step=\"0.01\" class=\"form-control\" formControlName=\"precosto105\" placeholder=\"\">\n                                        <small class=\"form-control-feedback\">Valor numérico (máx. 10 dígitos, 2 decimales)</small>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div *ngIf=\"this.pordctoFlag\" class=\"form-group row has-danger\">\n                                    <label class=\"control-label text-right col-md-3\">Descuento *</label>\n                                    <div class=\"col-md-9\">\n                                        <input type=\"number\" step=\"0.01\" class=\"form-control\" formControlName=\"pordcto\" placeholder=\"\">\n                                        <small class=\"form-control-feedback\">Valor numérico (máx. 10 dígitos, 2 decimales)</small>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"!this.pordctoFlag\" class=\"form-group row\">\n                                    <label class=\"control-label text-right col-md-3\">Descuento *</label>\n                                    <div class=\"col-md-9\">\n                                        <input type=\"number\" step=\"0.01\" class=\"form-control\" formControlName=\"pordcto\" placeholder=\"\">\n                                        <small class=\"form-control-feedback\">Valor numérico (máx. 10 dígitos, 2 decimales)</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group row\">\n                                    <label class=\"control-label text-right col-md-3\">Margen *</label>\n                                    <div class=\"col-md-9\">\n                                        <input type=\"number\" step=\"0.01\" class=\"form-control\" formControlName=\"margen\" placeholder=\"\">\n                                        <small class=\"form-control-feedback\">Valor numérico (máx. 10 dígitos, 2 decimales)</small>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group row\">\n                                    <label class=\"control-label text-right col-md-3\">Precio Final 21 *</label>\n                                    <div class=\"col-md-9\">\n                                        <input type=\"number\" step=\"0.01\" class=\"form-control\" formControlName=\"preciof21\" placeholder=\"\">\n                                        <small class=\"form-control-feedback\">Valor numérico (máx. 10 dígitos, 2 decimales)</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group row\">\n                                    <label class=\"control-label text-right col-md-3\">Precio Final 105 *</label>\n                                    <div class=\"col-md-9\">\n                                        <input type=\"number\" step=\"0.01\" class=\"form-control\" formControlName=\"preciof105\" placeholder=\"\">\n                                        <small class=\"form-control-feedback\">Valor numérico (máx. 10 dígitos, 2 decimales)</small>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group row\">\n                                    <label class=\"control-label text-right col-md-3\">Recalcular Margen</label>\n                                    <div class=\"col-md-9\">\n                                        <select class=\"form-control boolean-select\" formControlName=\"rmargen\">\n                                            <option [ngValue]=\"true\">Si</option>\n                                            <option [ngValue]=\"false\">No</option>\n                                        </select>\n                                        <small class=\"form-control-feedback\">Marcar para recalcular el margen</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <div *ngIf=\"this.tipomoneFlag\" class=\"form-group row has-danger\">\n                                    <label class=\"control-label text-right col-md-3\">Tipo Moneda *</label>\n                                    <div class=\"col-md-9\">\n                                        <select class=\"form-control\" formControlName=\"tipomone\">\n                                            <option value=\"\">Seleccione un tipo de moneda</option>\n                                            <option *ngFor=\"let moneda of tiposMoneda\" [value]=\"moneda.cod_mone\">\n                                                {{ moneda.moneda }}\n                                            </option>\n                                        </select>\n                                        <small class=\"form-control-feedback\">Seleccione el tipo de moneda</small>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"!this.tipomoneFlag\" class=\"form-group row\">\n                                    <label class=\"control-label text-right col-md-3\">Tipo Moneda *</label>\n                                    <div class=\"col-md-9\">\n                                        <select class=\"form-control\" formControlName=\"tipomone\">\n                                            <option value=\"\">Seleccione un tipo de moneda</option>\n                                            <option *ngFor=\"let moneda of tiposMoneda\" [value]=\"moneda.cod_mone\">\n                                                {{ moneda.moneda }}\n                                            </option>\n                                        </select>\n                                        <small class=\"form-control-feedback\">Seleccione el tipo de moneda</small>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"form-group row\">\n                                    <label class=\"control-label text-right col-md-3\">Activar Proveedor</label>\n                                    <div class=\"col-md-9\">\n                                        <select class=\"form-control boolean-select\" formControlName=\"actprov\">\n                                            <option [ngValue]=\"true\">Si</option>\n                                            <option [ngValue]=\"false\">No</option>\n                                        </select>\n                                        <small class=\"form-control-feedback\">Marcar para activar el proveedor</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <div *ngIf=\"this.cod_marcaFlag\" class=\"form-group row has-danger\">\n                                    <label class=\"control-label text-right col-md-3\">Marca *</label>\n                                    <div class=\"col-md-9\">\n                                        <select class=\"form-control\" formControlName=\"cod_marca\">\n                                            <option value=\"\">Seleccione una marca</option>\n                                            <option *ngFor=\"let marca of marcas\" [value]=\"marca.cod_marca\">\n                                                {{ marca.marca }}\n                                            </option>\n                                        </select>\n                                        <small class=\"form-control-feedback\">Seleccione la marca</small>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"!this.cod_marcaFlag\" class=\"form-group row\">\n                                    <label class=\"control-label text-right col-md-3\">Marca *</label>\n                                    <div class=\"col-md-9\">\n                                        <select class=\"form-control\" formControlName=\"cod_marca\">\n                                            <option value=\"\">Seleccione una marca</option>\n                                            <option *ngFor=\"let marca of marcas\" [value]=\"marca.cod_marca\">\n                                                {{ marca.marca }}\n                                            </option>\n                                        </select>\n                                        <small class=\"form-control-feedback\">Seleccione la marca</small>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div *ngIf=\"this.fechaFlag\" class=\"form-group row has-danger\">\n                                    <label class=\"control-label text-right col-md-3\">Fecha *</label>\n                                    <div class=\"col-md-9\">\n                                        <input type=\"date\" class=\"form-control\" formControlName=\"fecha\">\n                                        <small class=\"form-control-feedback\">Seleccione la fecha</small>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"!this.fechaFlag\" class=\"form-group row\">\n                                    <label class=\"control-label text-right col-md-3\">Fecha *</label>\n                                    <div class=\"col-md-9\">\n                                        <input type=\"date\" class=\"form-control\" formControlName=\"fecha\">\n                                        <small class=\"form-control-feedback\">Seleccione la fecha</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr>\n                    <div class=\"form-actions\">\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-offset-3 col-md-9\">\n                                        <button type=\"submit\" class=\"btn btn-success\">Guardar</button>\n                                        <button type=\"button\" class=\"btn btn-inverse\"\n                                            [routerLink]=\"['../conflista']\">Cancelar</button>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\"> </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n",
      "extension": "html"
    },
    "components\\newconflista\\newconflista.component.ts": {
      "content": "import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SubirdataService } from '../../services/subirdata.service';\nimport { CargardataService } from '../../services/cargardata.service';\nimport { debounceTime } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-newconflista',\n  templateUrl: './newconflista.component.html',\n  styleUrls: ['./newconflista.component.css']\n})\nexport class NewconflistaComponent {\n  public nuevoconflistaForm!: FormGroup;\n  public listapFlag: boolean = false;\n  public tiposMoneda: any[] = [];\n  public marcas: any[] = [];\n  public tipomoneFlag: boolean = false;\n  public cod_marcaFlag: boolean = false;\n  public fechaFlag: boolean = false;\n  public precosto21Flag: boolean = false;\n  public precosto105Flag: boolean = false;\n  public pordctoFlag: boolean = false;\n  public margenFlag: boolean = false;\n  public preciof21Flag: boolean = false;\n  public preciof105Flag: boolean = false;\n\n  constructor(\n    private subirdata: SubirdataService, \n    private router: Router, \n    private fb: FormBuilder,\n    private cargardata: CargardataService\n  ) {\n    this.cargarForm();\n    this.monitorFormChanges();\n    this.cargarTiposMoneda();\n    this.cargarMarcas();\n  }\n\n  cargarTiposMoneda() {\n    this.cargardata.getTipoMoneda().subscribe({\n      next: (response: any) => {\n        if (!response.error) {\n          this.tiposMoneda = response.mensaje;\n          console.log('Tipos de moneda cargados:', this.tiposMoneda);\n        } else {\n          console.error('Error loading tipos de moneda:', response.mensaje);\n        }\n      },\n      error: (error) => {\n        console.error('Error in API call:', error);\n      }\n    });\n  }\n\n  cargarMarcas() {\n    this.cargardata.getMarca().subscribe({\n      next: (response: any) => {\n        if (!response.error) {\n          this.marcas = response.mensaje;\n          console.log('Marcas cargadas:', this.marcas);\n        } else {\n          console.error('Error loading marcas:', response.mensaje);\n        }\n      },\n      error: (error) => {\n        console.error('Error in API call:', error);\n      }\n    });\n  }\n\n  cargarForm() {\n    this.nuevoconflistaForm = this.fb.group({\n      listap: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern(/^[0-9]{1,4}$/)\n      ])),\n      activa: new FormControl(false),\n      precosto21: new FormControl(0, Validators.required),\n      precosto105: new FormControl(0, Validators.required),\n      pordcto: new FormControl(0, Validators.required),\n      margen: new FormControl(0, Validators.required),\n      preciof21: new FormControl(0, Validators.required),\n      preciof105: new FormControl(0, Validators.required),\n      rmargen: new FormControl(false),\n      tipomone: new FormControl('', Validators.required),\n      actprov: new FormControl(false),\n      cod_marca: new FormControl('', Validators.required),\n      fecha: new FormControl(new Date().toISOString().split('T')[0], Validators.required)\n    });\n  }\n\n  guardar(form: FormGroup) {\n    if (form.valid) {\n      let nuevaConflista = {\n        \"listap\": form.value.listap,\n        \"activa\": form.value.activa,\n        \"precosto21\": form.value.precosto21,\n        \"precosto105\": form.value.precosto105,\n        \"pordcto\": form.value.pordcto,\n        \"margen\": form.value.margen,\n        \"preciof21\": form.value.preciof21,\n        \"preciof105\": form.value.preciof105,\n        \"rmargen\": form.value.rmargen,\n        \"tipomone\": form.value.tipomone,\n        \"actprov\": form.value.actprov,\n        \"cod_marca\": form.value.cod_marca,\n        \"fecha\": form.value.fecha\n      };\n      \n      console.log(nuevaConflista);\n      this.subirdata.subirDatosConflista(nuevaConflista).subscribe((data: any) => {\n        console.log(data);\n        Swal.fire({\n          title: 'Guardando...',\n          timer: 300,\n          didOpen: () => {\n            Swal.showLoading()\n          }\n        }).then((result) => {\n          if (result.dismiss === Swal.DismissReason.timer) {\n            console.log('I was closed by the timer')\n            window.history.back();\n          }\n        })\n      });\n    } else {\n      // Marcar todos los campos como tocados para mostrar errores\n      Object.keys(form.controls).forEach(key => {\n        const control = form.get(key);\n        control?.markAsTouched();\n        control?.markAsDirty();\n      });\n      \n      // Actualizar todas las banderas de validación\n      this.listapFlag = this.nuevoconflistaForm.controls['listap'].invalid;\n      this.tipomoneFlag = this.nuevoconflistaForm.controls['tipomone'].invalid;\n      this.cod_marcaFlag = this.nuevoconflistaForm.controls['cod_marca'].invalid;\n      this.fechaFlag = this.nuevoconflistaForm.controls['fecha'].invalid;\n      this.precosto21Flag = this.nuevoconflistaForm.controls['precosto21'].invalid;\n      this.precosto105Flag = this.nuevoconflistaForm.controls['precosto105'].invalid;\n      this.pordctoFlag = this.nuevoconflistaForm.controls['pordcto'].invalid;\n      this.margenFlag = this.nuevoconflistaForm.controls['margen'].invalid;\n      this.preciof21Flag = this.nuevoconflistaForm.controls['preciof21'].invalid;\n      this.preciof105Flag = this.nuevoconflistaForm.controls['preciof105'].invalid;\n      \n      console.log(form.errors);\n      Swal.fire({\n        title: 'ERROR',\n        text: 'Verifique los datos ingresados, hay campos inválidos o vacíos',\n        icon: 'error',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'OK',\n      });\n    }\n  }\n\n  monitorFormChanges() {\n    Object.keys(this.nuevoconflistaForm.controls).forEach(field => {\n      const control = this.nuevoconflistaForm.get(field);\n      control?.valueChanges.pipe(debounceTime(1000)).subscribe(value => {\n        console.log(`El campo ${field} cambió a: `, value);\n        this.listapFlag = this.nuevoconflistaForm.controls['listap'].invalid;\n        this.tipomoneFlag = this.nuevoconflistaForm.controls['tipomone'].invalid;\n        this.cod_marcaFlag = this.nuevoconflistaForm.controls['cod_marca'].invalid;\n        this.fechaFlag = this.nuevoconflistaForm.controls['fecha'].invalid;\n        this.precosto21Flag = this.nuevoconflistaForm.controls['precosto21'].invalid;\n        this.precosto105Flag = this.nuevoconflistaForm.controls['precosto105'].invalid;\n        this.pordctoFlag = this.nuevoconflistaForm.controls['pordcto'].invalid;\n        this.margenFlag = this.nuevoconflistaForm.controls['margen'].invalid;\n        this.preciof21Flag = this.nuevoconflistaForm.controls['preciof21'].invalid;\n        this.preciof105Flag = this.nuevoconflistaForm.controls['preciof105'].invalid;\n      });\n    });\n  }\n}\n",
      "extension": "ts"
    },
    "services\\subirdata.service.ts": {
      "content": "import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { UrlUpdateArticulo,UrlEliminarArticulo,UrlSubirDatosArticulo,UrlUpdateConflista, UrlSubirDatosConflista, UrlEliminarConflista,UrlUpdateValorCambio,UrlUpdateTipoMoneda,UrlSubirDatosValorCambio,UrlEliminarValorCambio, UrlSubirDatosTipoMoneda,UrlEliminarTipoMoneda,UrlEditProveedor,UrlSubirDatosProveedor,UrlEliminarProveedor, UrlSubirDatosArtIva,UrlUpdateMarca,UrlSubirDatosMarca,UrleliminarMarca,UrlUpdateRubro, UrleliminarRubro,UrlSubirDatosRubro,UrleliminarRubroPrincipal,UrlUpdateRubroPrincipal, UrlSubirDatosRubroPrincipal,UpdateArtsucxappWebManagedPHP, UpdateArtsucxappWeb, Urlclisucxapp, Urlpedidossucxapp, UrlpedidossucxappCompleto, Urlarticulossucxapp, Urlmixto, UpdateClisucxappWeb, UrlclisucxappWeb, UrleliminarCliente, UrlEliminarArtIva } from '../config/ini';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubirdataService {\n  constructor(private http: HttpClient) { }\n  editarStockArtSucx(idart: number, suc: number, op: string) {\n    return this.http.post(UpdateArtsucxappWeb,\n      {\n        \"idart\": idart,\n        \"exi\": suc,\n        \"op\": op,//\"+\", \"-\"\n      });\n  }\n\n  editarStockArtSucxManagedPHP(result: any, suc: number) {\n    return this.http.post(UpdateArtsucxappWebManagedPHP,\n      {\n        \"result\": result,\n        \"exi\": suc\n\n      });\n  }\n\n  editarDatosClientes(data: any, id: any) {\n    return this.http.post(UpdateClisucxappWeb,\n      {\n        \"clientes\": data,\n        \"id_vend\": id\n      });\n  }\n  subirDatosClientes(data: any, id: any) {\n    return this.http.post(UrlclisucxappWeb,\n      {\n        \"clientes\": data,\n        \"id_vend\": id\n      });\n  }\n  subirDatosPedidos(data: any, cabecera: any, id: any) {\n    console.log(data);\n    console.log(id);\n    return this.http.post(UrlpedidossucxappCompleto,\n      {\n        \"pedidos\": data,\n        \"cabecera\": cabecera,\n        \"id_vend\": id\n\n      });\n  }\n\n  subirDatosArticulos(data: any, id: any) {\n    return this.http.post(Urlarticulossucxapp,\n      {\n        \"articulos\": data,\n        \"id_vend\": id\n\n      });\n  }\n\n  subirDatosMixto(data: any, id: any) {\n    return this.http.post(Urlmixto,\n      {\n        \"mixto\": data,\n        \"id_vend\": id\n\n      });\n  }\n\n  subirDatosTipoMoneda(data: any) {\n    return this.http.post(UrlSubirDatosTipoMoneda,\n      {\n        \"cod_mone\": data.cod_mone,\n        \"moneda\": data.moneda,\n        \"simbolo\": data.simbolo,\n\n      });\n  }\n\n  subirDatosValorCambio(data: any) {\n    return this.http.post(UrlSubirDatosValorCambio,\n      {\n        \"codmone\": data.codmone,\n        \"desvalor\": data.desvalor,\n        \"fecdesde\": data.fecdesde,\n        \"fechasta\": data.fechasta,\n        \"vcambio\": data.vcambio,\n\n      });\n  }\n  subirDatosArticulo(articulo: any) {\n    return this.http.post(UrlSubirDatosArticulo, articulo);\n  }\n\n  eliminarCliente(data: any, id: any) {\n    return this.http.post(UrleliminarCliente,\n      {\n        \"clientes\": data,\n        \"id_vend\": id\n\n      });\n  }\n\n  eliminarRubroPrincipal(id: any) {\n    return this.http.post(UrleliminarRubroPrincipal,\n      {\n        \"id_rubro_p\": id\n        \n\n      });\n  }\n\n  eliminarRubro(id: any) {\n    return this.http.post(UrleliminarRubro,\n      {\n        \"id_rubro\": id\n        \n\n      });\n  }\n\n  eliminarArtIva(id: any) {\n    return this.http.post(UrlEliminarArtIva,\n      {\n        \"id_ariva\": id\n        \n\n      });\n  }\n\n  eliminarmarca(id: any) {\n    return this.http.post(UrleliminarMarca,\n      {\n        \"id_marca\": id\n        \n\n      });\n  }\n\n  eliminarproveedor(id: any) {\n    return this.http.post(UrlEliminarProveedor,\n      {\n        \"id_prov\": id\n        \n\n      });\n  }\n\n  eliminarTipoMoneda(id: any) {\n    return this.http.post(UrlEliminarTipoMoneda,\n      {\n        \"id_moneda\": id\n        \n\n      });\n  }\n  eliminarValorCambio(id: any) {\n    return this.http.post(UrlEliminarValorCambio,\n      {\n        \"id_valor\": id\n        \n\n      });\n  }\n\n  eliminarConflista(id: any) {\n    return this.http.post(UrlEliminarConflista,\n      {\n        \"id_conflista\": id\n      });\n  }\n\n  eliminarArticulo(id: any) {\n    return this.http.post(UrlEliminarArticulo, {\n      \"id_articulo\": id\n    });\n  }\n\n  subirDatosRubroPrincipal(rubroprincipal: any){\n    console.log(rubroprincipal);\n   \n    return this.http.post(UrlSubirDatosRubroPrincipal,\n      {\n        \"cod_rubro\": rubroprincipal.cod_rubro,\n        \"rubro\": rubroprincipal.rubro\n\n      });\n  }\n  subirDatosMarca(marca: any){\n    console.log(marca);\n   \n    return this.http.post(UrlSubirDatosMarca,\n      {\n        \"cod_marca\": marca.cod_marca,\n        \"marca\": marca.marca\n\n      });\n  }\n  subirDatosArtIva(artiva: any){\n    console.log(artiva);\n   \n    return this.http.post(UrlSubirDatosArtIva,\n      {\n        \"cod_iva\": artiva.cod_iva,\n        \"descripcion\": artiva.descripcion, // Note: API returns \"descripcio\" not \"descripcion\"\n              \"desde\": artiva.desde,       // Map \"desde\" to \"desde_date\"\n              \"hasta\": artiva.hasta,       // Map \"hasta\" to \"hasta_date\"\n              \"tipo_ali_1\": artiva.tipo_ali_1,\n              \"alicuota1\": artiva.alicuota1,\n              \"tipo_ali_2\": artiva.tipo_ali_2,\n              \"alicuota2\": artiva.alicuota2,\n              \"tipo_ali_3\": artiva.tipo_ali_3,\n              \"alicuota3\": artiva.alicuota3,\n              \"cuit\": artiva.cuit === 't',      // Convert 't'/'f' to boolean\n              \n\n      });\n  }\n\n  editarRubroPrincipal(id: any,rubro: any ) {\n    return this.http.post(UrlUpdateRubroPrincipal,\n      {\n        \"id_rubro_p\": id,\n        \"rubro\": rubro\n      });\n  }\n\n  editProveedor(proveedor: any) {\n    return this.http.post(UrlEditProveedor, {\n      \"id_prov\": proveedor.id_prov,\n      \"cod_prov\": proveedor.cod_prov,\n      \"nombre\": proveedor.nombre,\n      \"direccion\": proveedor.direccion,\n      \"codpos\": proveedor.codpos,\n      \"localidad\": proveedor.localidad,\n      \"telefono\": proveedor.telefono,\n      \"cuit\": proveedor.cuit,\n      \"contacto\": proveedor.contacto,\n      \"rubro\": proveedor.rubro,\n      \"cod_iva\": proveedor.cod_iva,\n      \"ganancias\": proveedor.ganancias,\n      \"ingbrutos\": proveedor.ingbrutos,\n      \"email\": proveedor.email,\n      \"www\": proveedor.www,\n      \"cta_proveedores\": proveedor.cta_proveedores,\n      \"fec_proceso\": proveedor.fec_proceso\n    });\n  }\n\n  subirDatosRubro(rubro: any){\n    console.log(rubro);\n   \n    return this.http.post(UrlSubirDatosRubro,\n      {\n        \"cod_rubro\": rubro.cod_rubro,\n        \"rubro\": rubro.rubro,\n        \"numerador\": rubro.numerador,\n        \"modiprecio\": rubro.modiprecio,\n        \"modidescri\": rubro.modidescri,\n        \"cod_depo\": rubro.cod_depo,\n        \"mustuni\": rubro.mustuni,\n        \"id_rubro_p\": rubro.id_rubro_p,\n      });\n  }\n\n  subirDatosProveedor(proveedor: any){\n    console.log(proveedor);\n   \n    return this.http.post(UrlSubirDatosProveedor, {\n      \"cod_prov\": proveedor.cod_prov,\n      \"nombre\": proveedor.nombre,\n      \"direccion\": proveedor.direccion,\n      \"codpos\": proveedor.codpos,\n      \"localidad\": proveedor.localidad,\n      \"telefono\": proveedor.telefono,\n      \"cuit\": proveedor.cuit,\n      \"contacto\": proveedor.contacto,\n      \"rubro\": proveedor.rubro,\n      \"cod_iva\": proveedor.cod_iva,\n      \"ganancias\": proveedor.ganancias,\n      \"ingbrutos\": proveedor.ingbrutos,\n      \"email\": proveedor.email,\n      \"www\": proveedor.www,\n      \"cta_proveedores\": proveedor.cta_proveedores,\n      \"fec_proceso\": proveedor.fec_proceso\n      // id_prov is serial and will be auto-generated by the database\n    });\n  }\n  \n  subirDatosConflista(conflista: any){\n    console.log(conflista);\n   \n    return this.http.post(UrlSubirDatosConflista,\n      {\n        \"listap\": conflista.listap,\n        \"activa\": conflista.activa,\n        \"precosto21\": conflista.precosto21,\n        \"precosto105\": conflista.precosto105,\n        \"pordcto\": conflista.pordcto,\n        \"margen\": conflista.margen,\n        \"preciof21\": conflista.preciof21,\n        \"preciof105\": conflista.preciof105,\n        \"rmargen\": conflista.rmargen,\n        \"tipomone\": conflista.tipomone,\n        \"actprov\": conflista.actprov,\n        \"cod_marca\": conflista.cod_marca,\n        \"fecha\": conflista.fecha\n      });\n  }\n\n  updateRubro(rubro: any) {\n    return this.http.post(UrlUpdateRubro, {\n      \"id_rubro\": rubro.id_rubro,\n      \"cod_rubro\": rubro.cod_rubro,\n      \"rubro\": rubro.rubro,\n      \"numerador\": rubro.numerador,\n      \"modiprecio\": rubro.modiprecio,\n      \"modidescri\": rubro.modidescri,\n      \"cod_depo\": rubro.cod_depo,\n      \"mustuni\": rubro.mustuni\n    });\n  }\n\n  updateMarca(marca: any) {\n    return this.http.post(UrlUpdateMarca, {\n      \"id_marca\": marca.id_marca,\n      \"cod_marca\": marca.cod_marca,\n      \"marca\": marca.marca,\n    });\n  }\n\n  updateTipoMoneda(moneda: any) {\n    return this.http.post(UrlUpdateTipoMoneda, {\n      \"cod_mone\": moneda.cod_mone,\n      \"moneda\": moneda.moneda,\n      \"simbolo\": moneda.simbolo,\n      \"id_moneda\": moneda.id_moneda,\n    \n    });\n \n  }\n\n  updateValorCambio(valorcambio: any) {\n    return this.http.post(UrlUpdateValorCambio, {\n      \"codmone\": valorcambio.codmone,\n      \"desvalor\": valorcambio.desvalor,\n      \"fecdesde\": valorcambio.fecdesde,\n      \"fechasta\": valorcambio.fechasta,\n      \"vcambio\": valorcambio.vcambio,\n      \"id_valor\": valorcambio.id_valor,\n    });\n  }\n\n  updateConflista(conflista: any) {\n    return this.http.post(UrlUpdateConflista, {\n      \"id_conflista\": conflista.id_conflista,\n      \"listap\": conflista.listap,\n      \"activa\": conflista.activa,\n      \"precosto21\": conflista.precosto21,\n      \"precosto105\": conflista.precosto105,\n      \"pordcto\": conflista.pordcto,\n      \"margen\": conflista.margen,\n      \"preciof21\": conflista.preciof21,\n      \"preciof105\": conflista.preciof105,\n      \"rmargen\": conflista.rmargen,\n      \"tipomone\": conflista.tipomone,\n      \"actprov\": conflista.actprov,\n      \"cod_marca\": conflista.cod_marca,\n      \"fecha\": conflista.fecha,\n      \"recalcular_21\": conflista.recalcular_21,\n      \"recalcular_105\": conflista.recalcular_105\n    });\n  }\n  updateArticulo(articulo: any) {\n    return this.http.post(UrlUpdateArticulo, {\n      \"id_articulo\": articulo.id_articulo,\n      \"nomart\": articulo.nomart,\n      \"marca\": articulo.marca,\n      \"precon\": articulo.precon,\n      \"prefi1\": articulo.prefi1,\n      \"prefi2\": articulo.prefi2,\n      \"prefi3\": articulo.prefi3,\n      \"prefi4\": articulo.prefi4,\n      \"exi1\": articulo.exi1,\n      \"exi2\": articulo.exi2,\n      \"exi3\": articulo.exi3,\n      \"exi4\": articulo.exi4,\n      \"exi5\": articulo.exi5,\n      \"stkmin1\": articulo.stkmin1,\n      \"stkmax1\": articulo.stkmax1,\n      \"stkprep1\": articulo.stkprep1,\n      \"stkmin2\": articulo.stkmin2,\n      \"stkmax2\": articulo.stkmax2,\n      \"stkprep2\": articulo.stkprep2,\n      \"stkmin3\": articulo.stkmin3,\n      \"stkmax3\": articulo.stkmax3,\n      \"stkprep3\": articulo.stkprep3,\n      \"stkmin4\": articulo.stkmin4,\n      \"stkmax4\": articulo.stkmax4,\n      \"stkprep4\": articulo.stkprep4,\n      \"stkmin5\": articulo.stkmin5,\n      \"stkmax5\": articulo.stkmax5,\n      \"stkprep5\": articulo.stkprep5,\n      \"cd_articulo\": articulo.cd_articulo,\n      \"cd_proveedor\": articulo.cd_proveedor,\n      \"cd_barra\": articulo.cd_barra,\n      \"idart\": articulo.idart,\n      \"estado\": articulo.estado,\n      \"rubro\": articulo.rubro,\n      \"articulo\": articulo.articulo,\n      \"cod_iva\": articulo.cod_iva,\n      \"prebsiva\": articulo.prebsiva,\n      \"precostosi\": articulo.precostosi,\n      \"margen\": articulo.margen,\n      \"descuento\": articulo.descuento,\n      \"cod_deposito\": articulo.cod_deposito,\n      \"tipo_moneda\": articulo.tipo_moneda\n    });\n  }\n\n}\n",
      "extension": "ts"
    }
  }
}