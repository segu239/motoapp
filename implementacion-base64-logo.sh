#!/bin/bash

echo "=== IMPLEMENTACI√ìN BASE64 LOGO MOTOAPP ==="
echo "Fecha: $(date)"
echo "==========================================="

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Funci√≥n para logs
log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Verificar que estamos en el directorio correcto
if [ ! -f "package.json" ] || [ ! -d "src/app" ]; then
    log_error "Este script debe ejecutarse desde el directorio ra√≠z del proyecto Angular"
    exit 1
fi

log_info "‚úÖ Directorio verificado"

# Crear backup del archivo original
BACKUP_FILE="src/app/config/empresa-config.ts.backup.$(date +%Y%m%d_%H%M%S)"
cp "src/app/config/empresa-config.ts" "$BACKUP_FILE"
log_info "‚úÖ Backup creado: $BACKUP_FILE"

# Verificar que el archivo ya contiene la implementaci√≥n Base64
if grep -q "MOTOMATCH_LOGO_BASE64" "src/app/config/empresa-config.ts"; then
    log_info "‚úÖ Configuraci√≥n Base64 ya implementada"
else
    log_error "‚ùå El archivo empresa-config.ts no contiene la implementaci√≥n Base64"
    log_error "Por favor ejecute primero la modificaci√≥n del archivo"
    exit 1
fi

# Verificar estructura de sucursales
log_info "üìä Verificando configuraci√≥n de sucursales..."

# Verificar sucursal 5 (debe mantener texto)
if grep -q "texto: 'MAYORISTA'" "src/app/config/empresa-config.ts"; then
    log_info "‚úÖ Sucursal 5 (MAYORISTA) mantiene configuraci√≥n de texto"
else
    log_error "‚ùå Sucursal 5 no mantiene la configuraci√≥n de texto"
    exit 1
fi

# Verificar otras sucursales (deben usar Base64)
if grep -q "logo: MOTOMATCH_LOGO_BASE64" "src/app/config/empresa-config.ts"; then
    log_info "‚úÖ Sucursales 1-4 configuradas para usar Base64"
else
    log_error "‚ùå Sucursales 1-4 no est√°n configuradas para usar Base64"
    exit 1
fi

# Verificar componentes cr√≠ticos
log_info "üîç Verificando componentes cr√≠ticos..."

COMPONENTES=(
    "src/app/components/carrito/carrito.component.ts"
    "src/app/components/cabeceras/cabeceras.component.ts"
    "src/app/components/historialventas2/historialventas2.component.ts"
    "src/app/services/pdf-generator.service.ts"
    "src/app/services/historial-pdf.service.ts"
)

for componente in "${COMPONENTES[@]}"; do
    if [ -f "$componente" ]; then
        if grep -q "getEmpresaConfig" "$componente"; then
            log_info "‚úÖ $componente usa getEmpresaConfig()"
        else
            log_warning "‚ö†Ô∏è  $componente no usa getEmpresaConfig()"
        fi
    else
        log_error "‚ùå $componente no encontrado"
    fi
done

# Verificar tama√±o de la imagen Base64
BASE64_SIZE=$(grep -o "data:image/jpeg;base64,[^']*" "src/app/config/empresa-config.ts" | wc -c)
log_info "üìè Tama√±o de imagen Base64: $BASE64_SIZE caracteres"

if [ "$BASE64_SIZE" -gt 15000 ]; then
    log_warning "‚ö†Ô∏è  Imagen Base64 es grande ($BASE64_SIZE caracteres). Considere optimizaci√≥n adicional."
elif [ "$BASE64_SIZE" -lt 1000 ]; then
    log_error "‚ùå Imagen Base64 parece demasiado peque√±a. Verifique la conversi√≥n."
    exit 1
else
    log_info "‚úÖ Tama√±o de imagen Base64 es apropiado"
fi

# Test de compilaci√≥n
log_info "üî® Probando compilaci√≥n..."
if npm run build --silent >/dev/null 2>&1; then
    log_info "‚úÖ Compilaci√≥n exitosa"
else
    log_error "‚ùå Error en compilaci√≥n"
    log_error "Ejecute 'npm run build' para ver detalles del error"
    exit 1
fi

# Resumen final
echo ""
echo "==========================================="
echo -e "${GREEN}‚úÖ IMPLEMENTACI√ìN COMPLETADA EXITOSAMENTE${NC}"
echo "==========================================="
echo ""
echo "üìã RESUMEN:"
echo "‚Ä¢ Sucursal 5 (MAYORISTA): Mantiene texto ‚úÖ"
echo "‚Ä¢ Sucursales 1-4: Ahora usan Base64 ‚úÖ"
echo "‚Ä¢ Backup creado: $BACKUP_FILE ‚úÖ"
echo "‚Ä¢ Compilaci√≥n exitosa ‚úÖ"
echo "‚Ä¢ 5 componentes cr√≠ticos verificados ‚úÖ"
echo ""
echo "üöÄ PR√ìXIMOS PASOS:"
echo "1. Ejecutar pruebas de PDF en cada sucursal"
echo "2. Verificar que los logos se muestran correctamente"
echo "3. Confirmar que sucursal 5 sigue funcionando con texto"
echo "4. Hacer commit de los cambios si todo funciona"
echo ""
echo "üíæ ROLLBACK (si es necesario):"
echo "   cp $BACKUP_FILE src/app/config/empresa-config.ts"
echo ""